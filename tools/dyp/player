<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Dynamic YouTube Nocookie Pro Player</title>
  <!-- CryptoJS for MD5 hashing -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/crypto-js/4.1.1/crypto-js.min.js"></script>
  <style>
    * { box-sizing: border-box; }
    body {
      margin: 0;
      font-family: 'Segoe UI', sans-serif;
      background: #111;
      color: #fff;
      transition: background 0.5s, color 0.5s;
    }
    .player-container {
      position: relative;
      max-width: 900px;
      margin: 40px auto;
      background: #000;
      border-radius: 12px;
      overflow: hidden;
      box-shadow: 0 0 20px #000;
      display: none; /* hidden until token validated */
    }
    iframe {
      width: 100%;
      height: 500px;
      pointer-events: none;
    }
    #overlayMessage {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 500px;
      background: black;
      color: white;
      display: flex;
      align-items: center;
      justify-content: center;
      text-align: center;
      font-size: 20px;
      font-weight: bold;
      z-index: 2;
      pointer-events: none;
    }
    .progress-bar {
      width: 100%;
      height: 8px;
      background: #333;
      cursor: pointer;
      position: relative;
    }
    .progress {
      height: 100%;
      background: #FFD700;
      width: 0%;
    }
    .time {
      text-align: center;
      margin: 10px 0;
      font-size: 14px;
    }
    .controls {
      display: flex;
      flex-wrap: wrap;
      gap: 12px;
      padding: 16px;
      justify-content: center;
      background-color: rgba(0,0,0,0.8);
      transition: opacity 0.3s;
    }
    .controls.hidden {
      opacity: 0;
      pointer-events: none;
    }
    button, select, input[type=range] {
      font-size: 16px;
      padding: 8px 14px;
      border-radius: 6px;
      border: none;
      cursor: pointer;
    }
    button {
      background: #444;
      color: white;
    }
    button:hover {
      background: #666;
    }
    .volume-container {
      display: flex;
      align-items: center;
      gap: 6px;
    }
    .volume-slider {
      width: 100px;
    }
    /* Themes */
    body.classic .progress { background: #FFD700; }
    body.neon .progress { background: #39FF14; }
    body.neon button { background: #00f2ff; color: #111; }
    body.neon button:hover { background: #0ff; }
    body.lime .progress { background: #ADFF2F; }
    body.lime button { background: #9ACD32; color: #111; }
    body.lime button:hover { background: #bfff00; }
  </style>
</head>
<body class="classic" oncontextmenu="return false;">

  <div class="player-container" id="playerContainer">
    <iframe id="ytPlayer" allow="autoplay; encrypted-media" allowfullscreen></iframe>
    <div id="overlayMessage">Click on Play button to start playback.</div>
    <div class="progress-bar" onclick="seekVideo(event)"><div class="progress" id="progressBar"></div></div>
    <div class="time" id="timeDisplay">0:00 / 0:00</div>
    <div class="controls" id="controls">
      <button id="playPauseBtn" onclick="togglePlayPause()">Play</button>
      <div class="volume-container">
        <label>üîä</label>
        <input type="range" min="0" max="100" value="100" class="volume-slider" onchange="changeVolume(this)">
      </div>
      <button onclick="toggleFullscreen()">Fullscreen</button>
      <select onchange="switchStyle(this.value)">
        <option value="classic">üé• Classic</option>
        <option value="neon">üåà Neon</option>
        <option value="lime">üçã Lime</option>
      </select>
    </div>
  </div>

  <script>
    // Parse URL parameters
    const params = new URLSearchParams(window.location.search);
    const idParam = params.get('id') || '';
    const tokenParam = params.get('token') || '';

    // Compute today's MD5 token
    const today = new Date();
    const dd = String(today.getDate()).padStart(2, '0');
    const mm = String(today.getMonth()+1).padStart(2, '0');
    const yy = String(today.getFullYear()).slice(-2);
    const key = dd + mm + yy;
    const validToken = CryptoJS.MD5(key).toString();

    // Validate token
    if (tokenParam !== validToken) {
      document.body.innerHTML = '<div style="display:flex; height:100vh; justify-content:center; align-items:center; background:#fff; color:#000; font-size:24px;">Access Denied</div>';
      throw new Error('Invalid access token');
    }

    // Decode video ID and initialize player UI
    const decodedId = atob(idParam);
    const iframe = document.getElementById('ytPlayer');
    iframe.src = `https://www.youtube-nocookie.com/embed/${decodedId}?enablejsapi=1&controls=0`;
    document.getElementById('playerContainer').style.display = 'block';

    // YouTube API & controls logic
    let player, duration = 0;
    const playPauseBtn = document.getElementById('playPauseBtn');

    function onYouTubeIframeAPIReady() {
      player = new YT.Player('ytPlayer', {
        events: { onReady: () => {
            duration = player.getDuration();
            updateProgress();
          }
        }
      });
    }
    function togglePlayPause() {
      const state = player.getPlayerState();
      if (state === 1) { player.pauseVideo(); playPauseBtn.textContent = 'Play'; document.getElementById('overlayMessage').style.display = 'flex'; }
      else { player.playVideo(); playPauseBtn.textContent = 'Pause'; document.getElementById('overlayMessage').style.display = 'none'; }
    }
    function changeVolume(slider) { player.setVolume(parseInt(slider.value)); }
    function toggleFullscreen() {
      const f = iframe;
      if (f.requestFullscreen) f.requestFullscreen();
      else if (f.webkitRequestFullscreen) f.webkitRequestFullscreen();
      else if (f.msRequestFullscreen) f.msRequestFullscreen();
    }
    function updateProgress() {
      if (player && player.getCurrentTime) {
        const current = player.getCurrentTime();
        duration = player.getDuration();
        const pct = (current / duration) * 100;
        document.getElementById('progressBar').style.width = pct + '%';
        document.getElementById('timeDisplay').textContent = `${formatTime(current)} / ${formatTime(duration)}`;
        const s = player.getPlayerState();
        if (s === 1) { playPauseBtn.textContent = 'Pause'; document.getElementById('overlayMessage').style.display = 'none'; }
        else if (s === 2) { playPauseBtn.textContent = 'Play'; document.getElementById('overlayMessage').style.display = 'flex'; }
      }
      requestAnimationFrame(updateProgress);
    }
    function formatTime(t) { const m = Math.floor(t/60); const s = String(Math.floor(t%60)).padStart(2,'0'); return `${m}:${s}`; }
    function seekVideo(e) { const r = e.currentTarget.getBoundingClientRect(); const p = (e.clientX - r.left)/r.width; player.seekTo(p*duration, true); }
    function switchStyle(style) { document.body.className = style; }

    // Auto-hide controls
    let controlsTimeout;
    const controlsEl = document.getElementById('controls');
    document.body.addEventListener('mousemove', () => {
      controlsEl.classList.remove('hidden');
      clearTimeout(controlsTimeout);
      controlsTimeout = setTimeout(() => controlsEl.classList.add('hidden'), 3000);
    });

    // Keyboard shortcuts
    document.addEventListener('keydown', (e) => {
      switch(e.code) {
        case 'Space': e.preventDefault(); togglePlayPause(); break;
        case 'ArrowRight': player.seekTo(player.getCurrentTime()+10, true); break;
        case 'ArrowLeft': player.seekTo(player.getCurrentTime()-10, true); break;
        case 'KeyF': toggleFullscreen(); break;
      }
    });

    // Load YouTube Iframe API
    const tag = document.createElement('script');
    tag.src = "https://www.youtube.com/iframe_api";
    document.body.appendChild(tag);
  </script>
</body>
</html>
